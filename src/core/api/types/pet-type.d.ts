/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = {
  readonly '/pet': {
    readonly parameters: {
      readonly query?: never;
      readonly header?: never;
      readonly path?: never;
      readonly cookie?: never;
    };
    readonly get?: never;
    readonly put?: never;
    /**
     * Add a new pet to the store
     * @description Add a new pet to the store inventory
     */
    readonly post: operations['addPet'];
    readonly delete?: never;
    readonly options?: never;
    readonly head?: never;
    readonly patch?: never;
    readonly trace?: never;
  };
};
export type webhooks = Record<string, never>;
export type components = {
  schemas: {
    readonly Category: {
      /** Format: int64 */
      readonly id?: number;
      readonly name?: string;
    };
    readonly Tag: {
      /** Format: int64 */
      readonly id?: number;
      readonly name?: string;
    };
    readonly Pet: {
      /**
       * Format: int64
       * @example 25
       */
      readonly id?: number;
      readonly category?: components['schemas']['Category'];
      /** @example doggie */
      readonly name: string;
      readonly photoUrls: readonly string[];
      readonly tags?: readonly components['schemas']['Tag'][];
      /**
       * @description pet status in the store
       * @enum {string}
       */
      readonly status?: 'available' | 'pending' | 'sold';
    };
  };
  responses: never;
  parameters: never;
  requestBodies: {
    /** @description Pet object that needs to be added to the store */
    readonly Pet: {
      readonly content: {
        readonly 'application/json': components['schemas']['Pet'];
        readonly 'application/xml': components['schemas']['Pet'];
      };
    };
  };
  headers: never;
  pathItems: never;
};
export type SchemaCategory = components['schemas']['Category'];
export type SchemaTag = components['schemas']['Tag'];
export type SchemaPet = components['schemas']['Pet'];
export type RequestBodyPet = components['requestBodies']['Pet'];
export type $defs = Record<string, never>;
export interface operations {
  readonly addPet: {
    readonly parameters: {
      readonly query?: never;
      readonly header?: never;
      readonly path?: never;
      readonly cookie?: never;
    };
    readonly requestBody: components['requestBodies']['Pet'];
    readonly responses: {
      /** @description Pet added successfully */
      readonly 200: {
        headers: {
          readonly [name: string]: unknown;
        };
        content: {
          readonly 'application/json': components['schemas']['Pet'];
        };
      };
      /** @description Invalid input */
      readonly 405: {
        headers: {
          readonly [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
}
